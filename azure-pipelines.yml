# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
 vmImage: 'Ubuntu-latest'

steps:

- script: |  
    echo ========== INICIO Instalando Dependencias
    sudo apt-get -y update
    sudo apt-get -y install curl 
    echo "deb https://dl.bintray.com/sbt/debian /" | sudo tee -a /etc/apt/sources.list.d/sbt.list
    sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 2EE0EA64E40A89B84B2DF73499E82A75642AC823
    sudo apt-get -y update
    sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
    sudo apt-get -y update
    sudo apt-get -y install sbt git debianutils rpm ssh
    echo ========== FIN Instalando Dependencias
  displayName: 'Instalando Dependencias'

- script: 
    echo ========== INICIO Compilando
    git clone https://github.com/riceslo/proyecto-gcs.git
    cd proyecto-gcs
    sbt compile
    echo  ========== FIN Compilando
  displayName: 'Compilando'
  
- script: 
   echo  ========== INICIO Pruebas Unitarias
    sudo sbt test
    echo  ========== FIN Pruebas Unitarias
  displayName: 'Pruebas Unitarias'
    
- script: 
    echo  ========== INICIO Empaquetando
    sudo sbt rpm:packageBin
    echo  ========== FIN Empaquetando
  displayName: 'Empaquetando'
  


- script: 
    echo  ========== INICIO Copiando
    echo $(WEBSEREVER-01_KEY) | base64 -di > ~/server_key.pem
    sudo chmod 600 ~/server_key.pem    
    scp -o "StrictHostKeyChecking no" -i ~/server_key.pem /home/vsts/work/1/s/proyecto-gcs/gcs-app/target/rpm/RPMS/noarch/gcs-app-2.8.x-1.noarch.rpm azureuser@40.87.99.245:.
    echo  ========== FIN Copiando
  displayName: 'Copiando'